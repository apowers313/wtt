name: Test

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

env:
  HUSKY: 0

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: ['lts/*']
        include:
          - os: ubuntu-latest
            node-version: '18.x'
          - os: ubuntu-latest
            node-version: '20.x'

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint --if-present

      - name: Type check
        run: npm run typecheck --if-present

      - name: Run unit tests
        run: npm run test:unit

      - name: Run integration tests
        run: npm run test:integration

      - name: Run E2E tests
        run: npm run test:e2e
        if: matrix.os == 'ubuntu-latest'

      - name: Generate coverage
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 'lts/*'
        run: npm run test:coverage

      - name: Upload coverage reports to Coveralls
        uses: coverallsapp/github-action@v2
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 'lts/*'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          file: ./coverage/lcov.info

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 'lts/*'
        with:
          name: coverage-report
          path: |
            coverage/
            !coverage/tmp/

  release:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
    permissions:
      contents: write       # to create release
      issues: write        # to comment on issues
      pull-requests: write # to comment on PRs
      id-token: write      # to enable OIDC for npm provenance

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures

      - name: Build
        run: npm run build --if-present

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release